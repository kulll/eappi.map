<div class="show-for-small-only">
    Placeholder link for Local map
</div>
<dl class="portlet portletEappiLocalMap hide-for-small-only"
    i18n:domain="eappi.map">

    <dt class="portletHeader">
        <span class="portletTopLeft"></span>
        Eappi Local Map
        <span class="portletTopRight"></span>
    </dt>

    <dd class="portletItem">

        <strong><div style="position:absolute; background:#fff;border-radius:3px; margin: 10px; padding: 0px 10px ; z-index:1" id="LocalAreaName">Select Location</div></strong>
        <div id="localmap" tal:attributes="style string: height: ${view/data/map_height}px"></div>            

<script tal:attributes="src string:${context/portal_url}/++resource++eappi.map/mapgeo.js" type="text/javascript"></script>                                                                                

<tal:script define="attribution string: &quot; &copy; <a href='http://osm.org/copyright' title='OpenStreetMap' target='_blank'>OpenStreetMap</a> contributors | Tiles Courtesy of <a href='http://www.mapquest.com/' title='MapQuest' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' width='16' height='16'>&quot; ">
<script type="text/javascript" tal:content="structure string:                                                 
var bounds = new L.LatLngBounds(new L.LatLng(80.74,-159.26), new L.LatLng(-51.768,174.243));


                                                              
var localmap = L.map( 'localmap', {                                                          
    center: ['31.8517', '35.1211'],                                                           
    zoom: ${view/data/zoom},
    minZoom: ${view/data/min_zoom},
    zoomControl: false

});                                                                                


var localmapstyle = {
            weight: 2,
            color: '#999',
            opacity: 1,
            fillColor: '#FD8D3C',
            dashArray: '3',
            fillOpacity: 0.7

};

function onEachFeature(feature, layer) {
            if (feature.properties && feature.properties.name) {

            var popupContent = '<h5>' + feature.properties.name  +'</h5>';
            }

            layer.on('click',function(){
            if(feature.properties.name == 'Jordan Valley'){
                window.location = '${context/portal_url}${view/data/jordan_valley}';
            }
            else if(feature.properties.name == 'Jerusalem'){
                window.location = '${context/portal_url}${view/data/jerusalem}';
            }
            else if(feature.properties.name == 'Northen West Bank'){
                window.location = '${context/portal_url}${view/data/northern_west_bank}';
            }
            else if(feature.properties.name == 'Southern West Bank'){
                window.location = '${context/portal_url}${view/data/southern_west_bank}';
            }

});

            layer.on('mouseover', function(e){
            if(feature.properties.name == 'Jordan Valley'){
               document.getElementById('LocalAreaName').textContent = feature.properties.name;
            }
            else if(feature.properties.name == 'Jerusalem'){
               document.getElementById('LocalAreaName').textContent = feature.properties.name;
            }
            else if(feature.properties.name == 'Northen West Bank'){
               document.getElementById('LocalAreaName').textContent = feature.properties.name;
            }
            else if(feature.properties.name == 'Southern West Bank'){
               document.getElementById('LocalAreaName').textContent = feature.properties.name;
            }

                var layer = e.target;

    layer.setStyle({
        weight: 5,
        color: '#666',
        dashArray: '',
        fillOpacity: 0.7
    });

    if (!L.Browser.ie && !L.Browser.opera) {
        layer.bringToFront();
    }


});

            layer.on('mouseout', function(e){
               document.getElementById('LocalAreaName').textContent = 'Select Location';
               geojson.resetStyle(e.target)

});


            
        }


geojson = L.geoJson(palestine, {
    style: localmapstyle,
    onEachFeature:onEachFeature 
       
}).addTo(localmap);

//For later improvement
//map.fitBounds(bounds);
                                                                                   
L.tileLayer( 'http://{s}.mqcdn.com/tiles/1.0.0/map/{z}/{x}/{y}.png', {             
    attribution:${attribution},
    subdomains: ['otile1','otile2','otile3','otile4']                              
}).addTo( localmap );                                                                   
                                                                                   
">
</script>  
</tal:script>

    </dd>

    <dd class="portletFooter">
        <span class="portletBottomLeft"></span> 
        <span class="portletBottomRight"></span>
    </dd>

</dl>
